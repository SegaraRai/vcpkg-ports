---
import type { PortContext } from '../../../../shared/dataTypes/portContext.mjs';
import { analyzeDependencies } from '../../../../shared/vcpkg/portDependencies.mjs';
import { getSupports } from '../../../../shared/vcpkg/portSupports.mjs';
import { stringifyPortDescription } from '../../../../shared/vcpkg/portUtils.mjs';
import { FULL_TRIPLETS } from '../../../../shared/vcpkg/triplets.mjs';
import { getFeatureSlug } from '../../../constants.mjs';
import portMap from '../../../virtual/portMap.mjs';
import SectionWrapper from '../SectionWrapper.astro';
import DefaultFeatureBadge from '../components/DefaultFeatureBadge.astro';
import Dependencies from '../components/Dependencies.astro';
import SupportedListItem from '../components/SupportedListItem.astro';
import type { SectionSubset } from '../defineSection.mjs';
import { renderMarkdownSubset } from '../utils/mdSubset.mjs';

interface Props {
  readonly context: PortContext;
  readonly featureName: string;
}

const {
  context: { manifest },
  featureName,
} = Astro.props;

const section: SectionSubset = {
  title: featureName,
  slug: getFeatureSlug(featureName),
  level: 3,
  noHeading: false,
};

const feature = manifest.features?.[featureName];
if (!feature) {
  throw new Error(`Feature ${featureName} not found in manifest`);
}

const isDefaultFeature = !!manifest['default-features']?.includes(featureName);

const {
  directHostDeps,
  directNormalDeps,
  transitiveHostDeps,
  transitiveNormalDeps,
} = analyzeDependencies(manifest, portMap, [featureName], true);

const allTriplets = manifest.supports
  ? getSupports(manifest.supports).supported
  : FULL_TRIPLETS;
const supports = feature.supports
  ? getSupports(feature.supports, allTriplets)
  : null;

const htmlDescription = renderMarkdownSubset(
  stringifyPortDescription(feature.description),
  {
    newline: 'break',
  }
);
---

<SectionWrapper section={section} translate="no">
  {isDefaultFeature && <DefaultFeatureBadge slot="heading-after" />}

  {
    htmlDescription ? (
      // eslint-disable-next-line astro/no-set-html-directive
      <p class="port-feature-description" set:html={htmlDescription} />
    ) : (
      <p class="port-feature-no-description" />
    )
  }

  {
    !!supports && !!feature.supports && (
      <details class="port-feature-supports narrow">
        <summary>
          <em>Supports:</em> <code translate="no" set:text={feature.supports} />
        </summary>
        {!!supports.supportedMinified && !!supports.unsupportedMinified && (
          <div class=":uno: mb-4" translate="no">
            <ul
              class:list={[
                'plain-list',
                ':uno: my-2 flex flex-col gap-y-1 leading-tight',
              ]}
            >
              {supports.supportedMinified.map((triplet) => (
                <SupportedListItem triplet={triplet} />
              ))}
            </ul>
            <ul
              class:list={[
                'plain-list',
                ':uno: my-2 flex flex-col gap-y-1 leading-tight',
              ]}
            >
              {supports.unsupportedMinified.map((triplet) => (
                <SupportedListItem triplet={triplet} unsupported />
              ))}
            </ul>
          </div>
        )}
      </details>
    )
  }

  <details class="port-feature-dependencies narrow">
    <summary><em>Dependencies:</em></summary>
    <Dependencies
      dependencies={directNormalDeps}
      transitiveDependencies={transitiveNormalDeps}
      portMap={portMap}
      narrowDetails
      openTransitiveIfNoDirect
    />
  </details>

  <details class="port-feature-host-dependencies narrow">
    <summary>
      <em>Host Dependencies:</em>
    </summary>
    <Dependencies
      dependencies={directHostDeps}
      transitiveDependencies={transitiveHostDeps}
      portMap={portMap}
      narrowDetails
      openTransitiveIfNoDirect
    />
  </details>
</SectionWrapper>
