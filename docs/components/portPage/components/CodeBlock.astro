---
import { normalizeText } from '../../../../shared/utils.mjs';
import CodeBlockRaw from './CodeBlockRaw.astro';

const shiki = await import('shiki');

interface Props {
  readonly class?: any;
  readonly lang: string;
  readonly code: string;
  readonly nosnippet?: boolean | undefined;
}

const { class: classList, lang, code, nosnippet } = Astro.props;

const highlighter = await shiki.getHighlighter({
  theme: 'monokai',
  langs: ['cmake', 'cpp'],
});

const html = highlighter
  .codeToHtml(normalizeText(code), { lang })
  .trim()
  .replace(/^<pre[^>]+><code>/, '')
  .replace('</code></pre>', '')
  .replace(/[{}]/g, (c) => `&#${c.charCodeAt(0)};`);
---

<CodeBlockRaw class={classList} lang={lang} nosnippet={nosnippet}>
  {/* eslint-disable-next-line astro/no-set-html-directive */}
  <Fragment set:html={html} />
</CodeBlockRaw>
