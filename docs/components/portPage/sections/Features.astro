---
import { getFeatureSlug } from '../../../constants.mjs';
import SectionWrapper from '../SectionWrapper.astro';
import Feature from '../components/Feature.astro';
import { SectionProps, defineSection } from '../defineSection.mjs';

type Props = SectionProps;

export const getSection = defineSection({
  title: 'Features',
  noHeading: false,
});

const { context, section } = Astro.props;

const featureNames = Object.keys(context.manifest.features || {}).sort();
const defaultFeatures = (context.manifest['default-features'] || [])
  .slice()
  .sort();
---

<SectionWrapper section={section}>
  {
    featureNames.length ? (
      <>
        <p>
          {defaultFeatures.length ? (
            <>
              {`Default feature${defaultFeatures.length > 1 ? 's' : ''}: `}
              <span translate="no">
                {defaultFeatures.map((featureName, i) => (
                  <>
                    {!!i && ', '}
                    <a href={`#${getFeatureSlug(featureName)}`}>
                      <code translate="no" set:text={featureName} />
                    </a>
                  </>
                ))}
              </span>
            </>
          ) : (
            <em>No default features set.</em>
          )}
        </p>
        {featureNames.map((featureName) => (
          <Feature context={context} featureName={featureName} />
        ))}
      </>
    ) : (
      <p>
        <em>No features defined.</em>
      </p>
    )
  }
</SectionWrapper>
